<script setup lang="ts">

import { ref, type Ref } from 'vue';
import { TypeGuards, type FormValues, type SimpleWidget } from '@/types';

const props = defineProps<{
    widget: SimpleWidget,
    formValues: FormValues,
}>()
//const value = ref(props.widget.default);

function getStringRef(): Ref<string> {
    const val = props.formValues[props.widget.field ?? ''];
    if (TypeGuards.isStringRef(val)) {
        return val
    }
    else if (TypeGuards.isString(val)) {
        return ref(val)
    }
    return ref(props.widget.default ?? '')
}
const value = getStringRef()


</script>

<template>
    <label class="col-span-2" for="{{kebabCase name}}">\{{ props.widget?.label }}</label>
    <WidgetName id="{{kebabCase name}}" class="col-span-8" v-model="value" />
</template>


<style scoped></style>
